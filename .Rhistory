# every row is a Census tract in Texas
input_csv <- read_csv("output/tx_tracts_scores.csv")
# Loop through each city we want to create data for
for (city in c('all', 'Austin, TX', 'Houston, TX')){
print(city)
# Filter out just the city in the data
# Unless we want all of Texas
if (city != 'all') {
input_csv <- input_csv %>% filter(urban_area == city)
} else {
city_input <- input_csv
}
# Sum up Hispanics, poverty
# So we can get the percentage of each
sum_all_hispanics <- sum(city_input$Hispanic_ACS_10_14)
sum_all_pop <- sum(city_input$Tot_Population_ACS_10_14)
sum_all_poverty <- sum(city_input$Prs_Blw_Pov_Lev_ACS_10_14)
# Group by this new column
# And add columns so we can determine how many
# Hispanic and poor residents live in tracts
# above, below the national average
nat_avg_population <- city_input %>%
group_by(national_avg) %>%
summarize(count = n(),
sum_pop = sum(Tot_Population_ACS_10_14),
sum_hispanic = sum(Hispanic_ACS_10_14),
sum_poverty = sum(Prs_Blw_Pov_Lev_ACS_10_14),
percent_pop = (sum_pop / sum_all_pop) * 100,
percent_hispanic = (sum_hispanic / sum_all_hispanics) * 100,
percent_poverty = (sum_poverty / sum_all_poverty) * 100)
write_csv(nat_avg_population, paste("output/national-avg-population-",
city, ".csv", sep=""))
}
# Loop through each city we want to create data for
for (city in c('all', 'Austin, TX', 'Houston, TX')){
print(city)
# Filter out just the city in the data
# Unless we want all of Texas
if (city != 'all') {
input_csv <- input_csv %>% filter(urban_area == city)
} else {
city_input <- input_csv
}
# Sum up Hispanics, poverty
# So we can get the percentage of each
sum_all_hispanics <- sum(city_input$Hispanic_ACS_10_14)
sum_all_pop <- sum(city_input$Tot_Population_ACS_10_14)
sum_all_poverty <- sum(city_input$Prs_Blw_Pov_Lev_ACS_10_14)
# Group by this new column
# And add columns so we can determine how many
# Hispanic and poor residents live in tracts
# above, below the national average
nat_avg_population <- city_input %>%
group_by(national_avg) %>%
summarize(count = n(),
sum_pop = sum(Tot_Population_ACS_10_14),
sum_hispanic = sum(Hispanic_ACS_10_14),
sum_poverty = sum(Prs_Blw_Pov_Lev_ACS_10_14),
percent_pop = (sum_pop / sum_all_pop) * 100,
percent_hispanic = (sum_hispanic / sum_all_hispanics) * 100,
percent_poverty = (sum_poverty / sum_all_poverty) * 100)
write_csv(nat_avg_population, paste("output/national-avg-population-",
city, ".csv", sep=""))
}
# load packages
library(tidyverse)
library(lubridate)
library(stringr)
library(readxl)
library(lubridate)
library(tidyr)
# Load in our csv
# every row is a Census tract in Texas
input_csv <- read_csv("output/tx_tracts_scores.csv")
# Add a new column called 'above_below'
# That is used to tract whether tracts are above or below
# the national average of 20.7
input_csv$national_avg[
(input_csv$Low_Response_Score > 20.7)
] <- 'above'
input_csv$national_avg[
(input_csv$Low_Response_Score <= 20.7)
] <- 'below'
# Loop through each city we want to create data for
for (city in c('all', 'Austin, TX', 'Houston, TX')){
print(city)
# Filter out just the city in the data
# Unless we want all of Texas
if (city != 'all') {
input_csv <- input_csv %>% filter(urban_area == city)
} else {
city_input <- input_csv
}
# Sum up Hispanics, poverty
# So we can get the percentage of each
sum_all_hispanics <- sum(city_input$Hispanic_ACS_10_14)
sum_all_pop <- sum(city_input$Tot_Population_ACS_10_14)
sum_all_poverty <- sum(city_input$Prs_Blw_Pov_Lev_ACS_10_14)
# Group by this new column
# And add columns so we can determine how many
# Hispanic and poor residents live in tracts
# above, below the national average
nat_avg_population <- city_input %>%
group_by(national_avg) %>%
summarize(count = n(),
sum_pop = sum(Tot_Population_ACS_10_14),
sum_hispanic = sum(Hispanic_ACS_10_14),
sum_poverty = sum(Prs_Blw_Pov_Lev_ACS_10_14),
percent_pop = (sum_pop / sum_all_pop) * 100,
percent_hispanic = (sum_hispanic / sum_all_hispanics) * 100,
percent_poverty = (sum_poverty / sum_all_poverty) * 100)
write_csv(nat_avg_population, paste("output/national-avg-population-",
city, ".csv", sep=""))
}
# Load in our csv
# every row is a Census tract in Texas
input_csv <- read_csv("output/tx_tracts_scores.csv")
# Add a new column called 'above_below'
# That is used to tract whether tracts are above or below
# the national average of 20.7
input_csv$national_avg[
(input_csv$Low_Response_Score > 20.7)
] <- 'above'
input_csv$national_avg[
(input_csv$Low_Response_Score <= 20.7)
] <- 'below'
# Loop through each city we want to create data for
for (city in c('all', 'Austin, TX', 'Houston, TX')){
print(city)
# Filter out just the city in the data
# Unless we want all of Texas
if (city != 'all') {
input_csv <- input_csv %>% filter(urban_area == city)
} else {
city_input <- input_csv
}
# Sum up Hispanics, poverty
# So we can get the percentage of each
sum_all_hispanics <- sum(city_input$Hispanic_ACS_10_14)
sum_all_pop <- sum(city_input$Tot_Population_ACS_10_14)
sum_all_poverty <- sum(city_input$Prs_Blw_Pov_Lev_ACS_10_14)
# Group by this new column
# And add columns so we can determine how many
# Hispanic and poor residents live in tracts
# above, below the national average
nat_avg_population <- city_input %>%
group_by(national_avg) %>%
summarize(count = n(),
sum_pop = sum(Tot_Population_ACS_10_14),
sum_hispanic = sum(Hispanic_ACS_10_14),
sum_poverty = sum(Prs_Blw_Pov_Lev_ACS_10_14),
percent_pop = (sum_pop / sum_all_pop) * 100,
percent_hispanic = (sum_hispanic / sum_all_hispanics) * 100,
percent_poverty = (sum_poverty / sum_all_poverty) * 100)
write_csv(nat_avg_population, paste("output/national-avg-population-",
city, ".csv", sep=""))
}
createCityTables()
createCityTables <- function(){
# Load in our csv
# every row is a Census tract in Texas
input_csv <- read_csv("output/tx_tracts_scores.csv")
# Add a new column called 'above_below'
# That is used to tract whether tracts are above or below
# the national average of 20.7
input_csv$national_avg[
(input_csv$Low_Response_Score > 20.7)
] <- 'above'
input_csv$national_avg[
(input_csv$Low_Response_Score <= 20.7)
] <- 'below'
# Loop through each city we want to create data for
for (city in c('all', 'Austin, TX', 'Houston, TX')){
print(city)
# Filter out just the city in the data
# Unless we want all of Texas
if (city != 'all') {
input_csv <- input_csv %>% filter(urban_area == city)
} else {
city_input <- input_csv
}
# Sum up Hispanics, poverty
# So we can get the percentage of each
sum_all_hispanics <- sum(city_input$Hispanic_ACS_10_14)
sum_all_pop <- sum(city_input$Tot_Population_ACS_10_14)
sum_all_poverty <- sum(city_input$Prs_Blw_Pov_Lev_ACS_10_14)
# Group by this new column
# And add columns so we can determine how many
# Hispanic and poor residents live in tracts
# above, below the national average
nat_avg_population <- city_input %>%
group_by(national_avg) %>%
summarize(count = n(),
sum_pop = sum(Tot_Population_ACS_10_14),
sum_hispanic = sum(Hispanic_ACS_10_14),
sum_poverty = sum(Prs_Blw_Pov_Lev_ACS_10_14),
percent_pop = (sum_pop / sum_all_pop) * 100,
percent_hispanic = (sum_hispanic / sum_all_hispanics) * 100,
percent_poverty = (sum_poverty / sum_all_poverty) * 100)
write_csv(nat_avg_population, paste("output/national-avg-population-",
city, ".csv", sep=""))
# Close for city loop
}
# close function
}
createCityTables
createCityTables()
createCityTables()
createCityTables()
createCityTables()
write_csv(nat_avg_population, paste("output/national-avg-population-",
"TEST",
".csv", sep=""))
createCityTables()
createCityTables()
createCityTables()
createCityTables()
View( gsub("TX", "", city) )
View( gsub(", TX", "", city) )
gsub(", TX", "", city)
tolower(gsub(", TX", "", city))
createCityTables()
print(city_lower)
print(city_lower)
createCityTables()
createCityTables()
createCityTables()
# load packages
library(tidyverse)
library(lubridate)
library(stringr)
library(readxl)
library(lubridate)
library(tidyr)
createCityTables <- function(){
# Load in our csv
# every row is a Census tract in Texas
input_csv <- read_csv("output/tx_tracts_scores.csv")
# Add a new column called 'above_below'
# That is used to tract whether tracts are above or below
# the national average of 20.7
input_csv$national_avg[
(input_csv$Low_Response_Score > 20.7)
] <- 'above'
input_csv$national_avg[
(input_csv$Low_Response_Score <= 20.7)
] <- 'below'
# Loop through each city we want to create data for
for (city in c('all', 'Austin, TX', 'Houston, TX')){
print(city)
# Filter out just the city in the data
# Unless we want all of Texas
if (city != 'all') {
input_csv <- input_csv %>% filter(urban_area == city)
} else {
city_input <- input_csv
}
# Sum up Hispanics, poverty
# So we can get the percentage of each
sum_all_hispanics <- sum(city_input$Hispanic_ACS_10_14)
sum_all_pop <- sum(city_input$Tot_Population_ACS_10_14)
sum_all_poverty <- sum(city_input$Prs_Blw_Pov_Lev_ACS_10_14)
# Group by this new column
# And add columns so we can determine how many
# Hispanic and poor residents live in tracts
# above, below the national average
nat_avg_population <- city_input %>%
group_by(national_avg) %>%
summarize(count = n(),
sum_pop = sum(Tot_Population_ACS_10_14),
sum_hispanic = sum(Hispanic_ACS_10_14),
sum_poverty = sum(Prs_Blw_Pov_Lev_ACS_10_14),
percent_pop = (sum_pop / sum_all_pop) * 100,
percent_hispanic = (sum_hispanic / sum_all_hispanics) * 100,
percent_poverty = (sum_poverty / sum_all_poverty) * 100)
city_lower <- tolower(gsub(", TX", "", city))
print('---')
print(city_lower)
write_csv(nat_avg_population, paste("output/national-avg-population-",
city_lower,
".csv", sep=""))
# Close for city loop
}
# close function
}
createCityTables()
createCityTables <- function(){
# Load in our csv
# every row is a Census tract in Texas
input_csv <- read_csv("output/tx_tracts_scores.csv")
# Add a new column called 'above_below'
# That is used to tract whether tracts are above or below
# the national average of 20.7
input_csv$national_avg[
(input_csv$Low_Response_Score > 20.7)
] <- 'above'
input_csv$national_avg[
(input_csv$Low_Response_Score <= 20.7)
] <- 'below'
# Loop through each city we want to create data for
for (city in c('all', 'Austin, TX', 'Houston, TX')){
print(city)
# Filter out just the city in the data
# Unless we want all of Texas
if (city != 'all') {
input_csv <- input_csv %>% filter(urban_area == city)
} else {
city_input <- input_csv
}
# Sum up Hispanics, poverty
# So we can get the percentage of each
sum_all_hispanics <- sum(city_input$Hispanic_ACS_10_14)
sum_all_pop <- sum(city_input$Tot_Population_ACS_10_14)
sum_all_poverty <- sum(city_input$Prs_Blw_Pov_Lev_ACS_10_14)
# Group by this new column
# And add columns so we can determine how many
# Hispanic and poor residents live in tracts
# above, below the national average
nat_avg_population <- city_input %>%
group_by(national_avg) %>%
summarize(count = n(),
sum_pop = sum(Tot_Population_ACS_10_14),
sum_hispanic = sum(Hispanic_ACS_10_14),
sum_poverty = sum(Prs_Blw_Pov_Lev_ACS_10_14),
percent_pop = (sum_pop / sum_all_pop) * 100,
percent_hispanic = (sum_hispanic / sum_all_hispanics) * 100,
percent_poverty = (sum_poverty / sum_all_poverty) * 100)
city_lower <- tolower(gsub(", TX", "TEST", city))
write_csv(nat_avg_population, paste("output/national-avg-population-",
city_lower,
".csv", sep=""))
# Close for city loop
}
# close function
}
city_lower <- tolower(gsub(", TX", "TEST", city))
city_lower <- tolower(gsub(", TX", "", city))
createCityTables()
createCityTables()
city_lower <- tolower(gsub(", TX", "", city))
createCityTables()
# load packages
library(tidyverse)
library(lubridate)
library(stringr)
library(readxl)
library(lubridate)
library(tidyr)
createCityTables <- function(){
# Load in our csv
# every row is a Census tract in Texas
input_csv <- read_csv("output/tx_tracts_scores.csv")
# Add a new column called 'above_below'
# That is used to tract whether tracts are above or below
# the national average of 20.7
input_csv$national_avg[
(input_csv$Low_Response_Score > 20.7)
] <- 'above'
input_csv$national_avg[
(input_csv$Low_Response_Score <= 20.7)
] <- 'below'
# Loop through each city we want to create data for
for (city in c('all', 'Austin, TX', 'Houston, TX')){
print(city)
# Filter out just the city in the data
# Unless we want all of Texas
if (city != 'all') {
input_csv <- input_csv %>% filter(urban_area == city)
} else {
city_input <- input_csv
}
# Sum up Hispanics, poverty
# So we can get the percentage of each
sum_all_hispanics <- sum(city_input$Hispanic_ACS_10_14)
sum_all_pop <- sum(city_input$Tot_Population_ACS_10_14)
sum_all_poverty <- sum(city_input$Prs_Blw_Pov_Lev_ACS_10_14)
# Group by this new column
# And add columns so we can determine how many
# Hispanic and poor residents live in tracts
# above, below the national average
nat_avg_population <- city_input %>%
group_by(national_avg) %>%
summarize(count = n(),
sum_pop = sum(Tot_Population_ACS_10_14),
sum_hispanic = sum(Hispanic_ACS_10_14),
sum_poverty = sum(Prs_Blw_Pov_Lev_ACS_10_14),
percent_pop = (sum_pop / sum_all_pop) * 100,
percent_hispanic = (sum_hispanic / sum_all_hispanics) * 100,
percent_poverty = (sum_poverty / sum_all_poverty) * 100)
city_lower <- tolower(gsub(", TX", "", city))
write_csv(nat_avg_population, paste("output/national-avg-population-",
city_lower,
".csv", sep=""))
# Close for city loop
}
# close function
}
createCityTables()
createCityTables()
city_input <- input_csv %>% filter(urban_area == city)
createCityTables <- function(){
# Load in our csv
# every row is a Census tract in Texas
input_csv <- read_csv("output/tx_tracts_scores.csv")
# Add a new column called 'above_below'
# That is used to tract whether tracts are above or below
# the national average of 20.7
input_csv$national_avg[
(input_csv$Low_Response_Score > 20.7)
] <- 'above'
input_csv$national_avg[
(input_csv$Low_Response_Score <= 20.7)
] <- 'below'
# Loop through each city we want to create data for
for (city in c('all', 'Austin, TX', 'Houston, TX')){
print(city)
# Filter out just the city in the data
# Unless we want all of Texas
if (city != 'all') {
city_input <- input_csv %>% filter(urban_area == city)
} else {
city_input <- input_csv
}
# Sum up Hispanics, poverty
# So we can get the percentage of each
sum_all_hispanics <- sum(city_input$Hispanic_ACS_10_14)
sum_all_pop <- sum(city_input$Tot_Population_ACS_10_14)
sum_all_poverty <- sum(city_input$Prs_Blw_Pov_Lev_ACS_10_14)
# Group by this new column
# And add columns so we can determine how many
# Hispanic and poor residents live in tracts
# above, below the national average
nat_avg_population <- city_input %>%
group_by(national_avg) %>%
summarize(count = n(),
sum_pop = sum(Tot_Population_ACS_10_14),
sum_hispanic = sum(Hispanic_ACS_10_14),
sum_poverty = sum(Prs_Blw_Pov_Lev_ACS_10_14),
percent_pop = (sum_pop / sum_all_pop) * 100,
percent_hispanic = (sum_hispanic / sum_all_hispanics) * 100,
percent_poverty = (sum_poverty / sum_all_poverty) * 100)
city_lower <- tolower(gsub(", TX", "", city))
write_csv(nat_avg_population, paste("output/national-avg-population-",
city_lower,
".csv", sep=""))
# Close for city loop
}
# close function
}
createCityTables()
censusTractsCounty <- function() {
tracts_county <- city_input %>%
group_by(national_avg) %>%
summarize(count = n())
}
censusTractsCounty()
write_csv(tracts_county, "output/tracts-per-county-.csv", sep="")
# Find out how many census tracts are in each county
censusTractsCounty <- function() {
tracts_county <- city_input %>%
group_by(County_name) %>%
summarize(count = n())
write_csv(tracts_county, "output/tracts-per-county-.csv", sep="")
}
censusTractsCounty()
write_csv(tracts_county, "output/tx-tracts-per-county-.csv", sep="")
tracts_county <- input_csv %>%
group_by(County_name) %>%
summarize(count = n())
write_csv(tracts_county, "output/tx-tracts-per-county-.csv", sep="")
# Find out how many census tracts are in each county
censusTractsCounty <- function() {
tracts_county <- input_csv %>%
group_by(County_name) %>%
summarize(count = n())
write_csv(tracts_county, "output/tx-tracts-per-county-.csv", sep="")
}
censusTractsCounty()
tracts_county <- input_csv %>%
group_by(County_name) %>%
summarize(count = n(),
county = County_name)
write_csv(tracts_county, "output/tx-tracts-per-county-.csv")
# load packages
library(tidyverse)
library(lubridate)
library(stringr)
library(readxl)
library(lubridate)
library(tidyr)
# Find out how many census tracts are in each county
censusTractsCounty <- function() {
tracts_county <- input_csv %>%
group_by(County_name) %>%
summarize(count = n(),
county = County_name)
write_csv(tracts_county, "output/tx-tracts-per-county-.csv")
}
censusTractsCounty()
tracts_county <- input_csv %>%
group_by(County_name) %>%
summarize(count = n())
write_csv(tracts_county, "output/tx-tracts-per-county-.csv")
# Load in our csv
# every row is a Census tract in Texas
input_csv <- read_csv("output/tx_tracts_scores.csv")
tracts_county <- input_csv %>%
group_by(County_name) %>%
summarize(count = n())
write_csv(tracts_county, "output/tx-tracts-per-county-.csv")
write_csv(tracts_county, "output/tx-tracts-per-county.csv")
write_csv(tracts_county, "output/tx_tracts_per_county.csv")
